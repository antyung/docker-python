---
name: 'Build Push python-alpine'

on:
  push:
    branches:
      - main
    paths:
      - 'alpine/Dockerfile.alpine-amd64'
      - 'alpine/Dockerfile.alpine-arm64'
      - 'alpine/docker-bake.hcl'
  workflow_dispatch:

env:
  DOCKER_IMAGE: python
  DOCKER_IMAGE_OS: alpine
  DOCKER_IMAGE_GROUP: dev
  AWS_DEFAULT_REGION: us-east-1
  AWS_ECR_URI: public.ecr.aws/w2u0w5i6
  AWS_OIDC_ROLE_ARN: ${{secrets.AWS_OIDC_ROLE_ARN}}

permissions:
  id-token: write
  contents: read

jobs:
  build-push:
    strategy:
      matrix:
        architecture: [amd64, arm64]
        include:
          - architecture: amd64
            runner: ubuntu-latest
          - architecture: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{matrix.runner}}
    steps:
      - name: 'checkout'
        uses: actions/checkout@v4
        with:
          show-progress: false

      - name: 'set shell options globally'
        run: set -euxo pipefail

      - name: 'setup qemu'
        uses: docker/setup-qemu-action@v3

      - name: 'setup docker buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'configure aws credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{env.AWS_OIDC_ROLE_ARN}}"
          role-session-name: "aws-oidc-${{github.repository.name}}-${{github.run_id}}"
          aws-region: "${{env.AWS_DEFAULT_REGION}}"

      - name: 'login to amazon ecr public'
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: 'extract version from dockerfile'
        id: extract_version
        run: |
          DOCKER_IMAGE_TAG="$(cat ./${{env.DOCKER_IMAGE_OS}}/VERSION)"
          echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG#v}" >> ${GITHUB_ENV}
          echo "DOCKER_IMAGE_TAG=${DOCKER_IMAGE_TAG#v}"
          SYSTEM_CPU_PROC="$(grep -c ^proc /proc/cpuinfo)"
          echo "SYSTEM_CPU_PROC=${SYSTEM_CPU_PROC}" >> ${GITHUB_ENV}
          echo "SYSTEM_CPU_PROC=${SYSTEM_CPU_PROC}"

      - name: 'create ecr-public repository'
        run: |
          aws ecr-public create-repository --repository-name "${{env.DOCKER_IMAGE_GROUP}}/${{env.DOCKER_IMAGE}}" --region "${{env.AWS_DEFAULT_REGION}}" || true

      - name: 'cache build artifacts'
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: python-build-${{matrix.architecture}}-${{github.run_id}}
          restore-keys: |
            python-build-${{matrix.architecture}}-

      - name: "build-${{matrix.architecture}}"
        uses: docker/bake-action@v5
        with:
          targets: "build-${{matrix.architecture}}"
          workdir: "./${{env.DOCKER_IMAGE_OS}}"

      - name: "push-${{matrix.architecture}}"
        run: docker push ${{env.AWS_ECR_URI}}/${{env.DOCKER_IMAGE_GROUP}}/${{env.DOCKER_IMAGE}}:${{env.DOCKER_IMAGE_TAG}}-${{matrix.architecture}}
